@using Microsoft.AspNet.Identity
@model UGPC_IIUI.ViewModels.ProjectViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>
<h4>Project</h4>
<hr />
<div class="row">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal col-md-8">

            @Html.HiddenFor(model => model.ProjectId)

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SubmissionDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.SubmissionDate, "{0:dd MMM yyyy}", new { @class = "form-control", @readonly = "true" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Status, new SelectList(ViewBag.StatusList, "Value", "Text"), new { @class = "form-control", @id = "StatusList" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProjectType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProjectType, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Student1.Name, "Student 1", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Student1.Name, new { @class = "form-control", @readonly = "true" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Student2.Name, "Student 2", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Student2.Name, new { @class = "form-control", @readonly = "true" })
                </div>
            </div>


            @* Form submit button *@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </div>

        <div class="col-md-4 pull-left">

            <div class="form-group">
                @Html.Label("Supervisor", htmlAttributes: new {@class = "control-label "})
                <div class="">
                    @Html.DropDownListFor(model => model.SupervisorId, new SelectList(Model.Supervisors, "Id", "Name"),"", new {@class = "form-control",@id="supIdList"})
                    @Html.TextBoxFor(model=>model.SupervisorName,new {@class = "form-control", @id = "supName", @readonly="true"})
                </div>
            </div>


            <div class="form-group">
                @Html.Label("Comments", htmlAttributes: new {@class = "control-label"})
                <div class="">
                    @Html.TextAreaFor(model => model.Changes, new {@class = "form-control", @id = "txtArea", @rows = 13})
                </div>
            </div>


        </div>
     }
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts
{

    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function() {


            var check = "@Model.SupervisorId";

            if (!(check == "")) {
                $("#supIdList").hide();
                $("#supName").show();
            }
            else {
                $("#supIdList").show();
                $("#supName").hide();
            }

            var id = "@User.Identity.GetUserId()";
            if (!(check == id))
                $("#txtArea").prop("readonly", true);

           
            if ('@User.IsInRole("Admin")')
            {

                $("#txtArea").prop("readonly", false);
                $("#supIdList").show();
                $("#supName").hide();
            }

            var status = "@Model.Status";
            switch (status) {
            case "Proposal Accepted":
                $("#StatusList option")
                    .filter('[value="Proposal Submitted"],[value="Rejected"],[value="Proposal Accepted With Changes"]')
                    .hide();
                break;
            case "Proposal Accepted With Changes":
                $("#StatusList option")
                    .filter('[value="Proposal Submitted"],[value="Rejected"]').hide();
                $("#changesDiv").show();
                break;
            case "In Progress":
                $("#StatusList option")
                    .filter(
                        '[value="Proposal Submitted"],[value="Proposal Accepted"],[value="Proposal Accepted With Changes"],[value="Rejected"]')
                    .hide();
                    break;
            case "Ready For Internal Evaluation":
                $("#StatusList option")
                    .filter(
                        '[value="Proposal Submitted"],[value="Proposal Accepted"],[value="Proposal Accepted With Changes"],[value="In Progress"],[value="Rejected"]')
                    .hide();
                    break;
            case "Ready For External Evaluation":
                $("#StatusList option")
                    .filter(
                        '[value="Proposal Submitted"],[value="Proposal Accepted"],[value="Proposal Accepted With Changes"],[value="In Progress"],[value="Ready For Internal Evaluation"],[value="Rejected"]')
                    .hide();
                break;
            case "Completed":
                $("#StatusList option")
                    .filter(
                        '[value="Proposal Submitted"],[value="Proposal Accepted"],[value="Proposal Accepted With Changes"],[value="In Progress"],[value="Ready For Internal Evaluation"],[value="Ready For External Evaluation"],[value="Rejected"]')
                    .hide();
                break;
            case "Rejected":
                $("#StatusList option")
                    .filter(
                        '[value="Proposal Submitted"],[value="Proposal Accepted"],[value="Proposal Accepted With Changes"],[value="In Progress"],[value="Ready For Internal Evaluation"],[value="Ready For External Evaluation"],[value="Completed"]')
                    .hide();
                break;
            }


        });

    </script>


}